
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'divide gate_a gate_c gate_h gate_i gate_s gate_t gate_x gate_y gate_z i lbracket lparen minus number plus rbracket rparen sqrt state_0 state_1 state_i state_minus state_minus_i state_plus timescircuit : states gatesfactor : number\n              | sqrt lparen number rparen\n              | number times sqrt lparen number rparenoperand : minus\n               | plusfactors : factor\n               | factor divide factor\n               | lparen factor operand i times factor rparen divide factorstates : states times comp_state\n    | comp_statecomp_state : state\n                  | factors state\n                  | lbracket factors state operand factors state rbracketstate : state_0\n    | state_1\n    | state_plus\n    | state_minus\n    | state_i\n    | state_minus_igates : gates gate\n              | gates times gate\n              | gategate : gate_x\n           | gate_y\n           | gate_z\n           | gate_s\n           | gate_t\n           | gate_h\n           | gate_i\n           | gate_c\n           | gate_a\n    '
    
_lr_action_items = {'lbracket':([0,18,],[6,6,]),'state_0':([0,5,13,15,18,30,39,49,50,55,59,],[7,7,-7,-2,7,7,-8,-3,7,-4,-9,]),'state_1':([0,5,13,15,18,30,39,49,50,55,59,],[8,8,-7,-2,8,8,-8,-3,8,-4,-9,]),'state_plus':([0,5,13,15,18,30,39,49,50,55,59,],[9,9,-7,-2,9,9,-8,-3,9,-4,-9,]),'state_minus':([0,5,13,15,18,30,39,49,50,55,59,],[10,10,-7,-2,10,10,-8,-3,10,-4,-9,]),'state_i':([0,5,13,15,18,30,39,49,50,55,59,],[11,11,-7,-2,11,11,-8,-3,11,-4,-9,]),'state_minus_i':([0,5,13,15,18,30,39,49,50,55,59,],[12,12,-7,-2,12,12,-8,-3,12,-4,-9,]),'lparen':([0,6,16,18,41,42,43,46,],[14,14,34,14,-5,-6,48,14,]),'number':([0,6,14,18,31,34,41,42,46,48,51,58,],[15,15,15,15,15,44,-5,-6,15,52,15,15,]),'sqrt':([0,6,14,18,31,33,41,42,46,51,58,],[16,16,16,16,16,43,-5,-6,16,16,16,]),'$end':([1,17,19,20,21,22,23,24,25,26,27,28,35,45,],[0,-1,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-21,-22,]),'times':([2,3,4,7,8,9,10,11,12,15,17,19,20,21,22,23,24,25,26,27,28,29,35,37,45,47,56,],[18,-11,-12,-15,-16,-17,-18,-19,-20,33,36,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-13,-21,-10,-22,51,-14,]),'gate_x':([2,3,4,7,8,9,10,11,12,17,19,20,21,22,23,24,25,26,27,28,29,35,36,37,45,56,],[20,-11,-12,-15,-16,-17,-18,-19,-20,20,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-13,-21,20,-10,-22,-14,]),'gate_y':([2,3,4,7,8,9,10,11,12,17,19,20,21,22,23,24,25,26,27,28,29,35,36,37,45,56,],[21,-11,-12,-15,-16,-17,-18,-19,-20,21,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-13,-21,21,-10,-22,-14,]),'gate_z':([2,3,4,7,8,9,10,11,12,17,19,20,21,22,23,24,25,26,27,28,29,35,36,37,45,56,],[22,-11,-12,-15,-16,-17,-18,-19,-20,22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-13,-21,22,-10,-22,-14,]),'gate_s':([2,3,4,7,8,9,10,11,12,17,19,20,21,22,23,24,25,26,27,28,29,35,36,37,45,56,],[23,-11,-12,-15,-16,-17,-18,-19,-20,23,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-13,-21,23,-10,-22,-14,]),'gate_t':([2,3,4,7,8,9,10,11,12,17,19,20,21,22,23,24,25,26,27,28,29,35,36,37,45,56,],[24,-11,-12,-15,-16,-17,-18,-19,-20,24,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-13,-21,24,-10,-22,-14,]),'gate_h':([2,3,4,7,8,9,10,11,12,17,19,20,21,22,23,24,25,26,27,28,29,35,36,37,45,56,],[25,-11,-12,-15,-16,-17,-18,-19,-20,25,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-13,-21,25,-10,-22,-14,]),'gate_i':([2,3,4,7,8,9,10,11,12,17,19,20,21,22,23,24,25,26,27,28,29,35,36,37,45,56,],[26,-11,-12,-15,-16,-17,-18,-19,-20,26,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-13,-21,26,-10,-22,-14,]),'gate_c':([2,3,4,7,8,9,10,11,12,17,19,20,21,22,23,24,25,26,27,28,29,35,36,37,45,56,],[27,-11,-12,-15,-16,-17,-18,-19,-20,27,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-13,-21,27,-10,-22,-14,]),'gate_a':([2,3,4,7,8,9,10,11,12,17,19,20,21,22,23,24,25,26,27,28,29,35,36,37,45,56,],[28,-11,-12,-15,-16,-17,-18,-19,-20,28,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-13,-21,28,-10,-22,-14,]),'minus':([7,8,9,10,11,12,15,32,38,49,55,],[-15,-16,-17,-18,-19,-20,-2,41,41,-3,-4,]),'plus':([7,8,9,10,11,12,15,32,38,49,55,],[-15,-16,-17,-18,-19,-20,-2,42,42,-3,-4,]),'rbracket':([7,8,9,10,11,12,53,],[-15,-16,-17,-18,-19,-20,56,]),'divide':([13,15,49,55,57,],[31,-2,-3,-4,58,]),'rparen':([15,44,49,52,54,55,],[-2,49,-3,55,57,-4,]),'i':([40,41,42,],[47,-5,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'circuit':([0,],[1,]),'states':([0,],[2,]),'comp_state':([0,18,],[3,37,]),'state':([0,5,18,30,50,],[4,29,4,38,53,]),'factors':([0,6,18,46,],[5,30,5,50,]),'factor':([0,6,14,18,31,46,51,58,],[13,13,32,13,39,13,54,59,]),'gates':([2,],[17,]),'gate':([2,17,36,],[19,35,45,]),'operand':([32,38,],[40,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> circuit","S'",1,None,None,None),
  ('circuit -> states gates','circuit',2,'p_circuit','qparser.py',24),
  ('factor -> number','factor',1,'p_factor','qparser.py',95),
  ('factor -> sqrt lparen number rparen','factor',4,'p_factor','qparser.py',96),
  ('factor -> number times sqrt lparen number rparen','factor',6,'p_factor','qparser.py',97),
  ('operand -> minus','operand',1,'p_opearand','qparser.py',108),
  ('operand -> plus','operand',1,'p_opearand','qparser.py',109),
  ('factors -> factor','factors',1,'p_factors','qparser.py',115),
  ('factors -> factor divide factor','factors',3,'p_factors','qparser.py',116),
  ('factors -> lparen factor operand i times factor rparen divide factor','factors',9,'p_factors','qparser.py',117),
  ('states -> states times comp_state','states',3,'p_states','qparser.py',129),
  ('states -> comp_state','states',1,'p_states','qparser.py',130),
  ('comp_state -> state','comp_state',1,'p_comp_states','qparser.py',142),
  ('comp_state -> factors state','comp_state',2,'p_comp_states','qparser.py',143),
  ('comp_state -> lbracket factors state operand factors state rbracket','comp_state',7,'p_comp_states','qparser.py',144),
  ('state -> state_0','state',1,'p_state','qparser.py',162),
  ('state -> state_1','state',1,'p_state','qparser.py',163),
  ('state -> state_plus','state',1,'p_state','qparser.py',164),
  ('state -> state_minus','state',1,'p_state','qparser.py',165),
  ('state -> state_i','state',1,'p_state','qparser.py',166),
  ('state -> state_minus_i','state',1,'p_state','qparser.py',167),
  ('gates -> gates gate','gates',2,'p_gates','qparser.py',174),
  ('gates -> gates times gate','gates',3,'p_gates','qparser.py',175),
  ('gates -> gate','gates',1,'p_gates','qparser.py',176),
  ('gate -> gate_x','gate',1,'p_gate','qparser.py',196),
  ('gate -> gate_y','gate',1,'p_gate','qparser.py',197),
  ('gate -> gate_z','gate',1,'p_gate','qparser.py',198),
  ('gate -> gate_s','gate',1,'p_gate','qparser.py',199),
  ('gate -> gate_t','gate',1,'p_gate','qparser.py',200),
  ('gate -> gate_h','gate',1,'p_gate','qparser.py',201),
  ('gate -> gate_i','gate',1,'p_gate','qparser.py',202),
  ('gate -> gate_c','gate',1,'p_gate','qparser.py',203),
  ('gate -> gate_a','gate',1,'p_gate','qparser.py',204),
]
